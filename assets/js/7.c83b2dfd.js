(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{411:function(t,s,v){t.exports=v.p+"assets/img/000.e76d2a9b.jpg"},412:function(t,s,v){t.exports=v.p+"assets/img/001.1698a2cf.jpg"},413:function(t,s,v){t.exports=v.p+"assets/img/002.e807fbc2.jpg"},414:function(t,s,v){t.exports=v.p+"assets/img/003.da6c7e02.jpg"},433:function(t,s,v){"use strict";v.r(s);var _=v(25),a=Object(_.a)({},(function(){var t=this,s=t.$createElement,_=t._self._c||s;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"d2c"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#d2c"}},[t._v("#")]),t._v(" D2C")]),t._v(" "),_("blockquote",[_("p",[t._v("本节部分内容仍在施工中...")])]),t._v(" "),_("h2",{attrs:{id:"组件转dsl"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#组件转dsl"}},[t._v("#")]),t._v(" 组件转DSL")]),t._v(" "),_("blockquote",[_("p",[t._v("本小节主要讲述设计稿中的组件单元转换为DSL的基本原理，目标是将组件转化为一个结构化DSL")])]),t._v(" "),_("p",[t._v("根据 "),_("RouterLink",{attrs:{to:"/language.html#组件"}},[_("strong",[t._v("组件")])]),t._v(" 的定义，组件的原子均使用同一坐标系。")],1),t._v(" "),_("img",{attrs:{src:v(411),width:"640"}}),t._v(" "),_("p",[t._v("如上图，将一个新闻卡片的组件尝试转换为DSL。能直接获取的只有原子图层的优先级（在Sketch中上方图层覆盖下方图层）、以及原子位置，综合这些信息可以转换一层结构的DSL，所有的原子的位置形状以坐标来确定。")]),t._v(" "),_("p",[t._v("如希望进一步结构化DSL，需要获得更多的信息，因此组件引入了 "),_("strong",[t._v("布局方向")]),t._v(" 和 "),_("strong",[t._v("约束")]),t._v(" 的概念。")]),t._v(" "),_("h3",{attrs:{id:"布局方向"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#布局方向"}},[t._v("#")]),t._v(" 布局方向")]),t._v(" "),_("p",[t._v("布局方向是组件的属性，默认水平方向是 "),_("strong",[t._v("LTR")]),t._v(" ，垂直方向是 "),_("strong",[t._v("TTB")]),t._v("。")]),t._v(" "),_("p",[t._v("按照组件设定的布局方向进行分析，优先TTB，再进行LTR，循环至不可切分，得如下分块和对应的结构DSL：")]),t._v(" "),_("img",{attrs:{src:v(412),width:"640"}}),t._v(" "),_("h3",{attrs:{id:"约束"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#约束"}},[t._v("#")]),t._v(" 约束")]),t._v(" "),_("p",[t._v("在常规的设计过程中，一般不定义每个原子动态的布局信息（如拉伸填充和动态位置）；最直观的例子就是，如果组件的宽高发生变化，设计稿往往会出现非预期的效果。")]),t._v(" "),_("p",[t._v("因此设计工具中引入了 "),_("strong",[t._v("约束")]),t._v(" 管理的功能，来定义原子的布局信息。")]),t._v(" "),_("blockquote",[_("p",[t._v("约束的概念来源自Apple OSX/IOS UI")])]),t._v(" "),_("p",[t._v("一条约束包含的信息是两个原子，以及他们之间的位置关系；或一个原子自身的填充情况。")]),t._v(" "),_("img",{attrs:{src:v(413),width:"640"}}),t._v(" "),_("p",[t._v("如上图，副标题不是一个TTB元素，它需要向下对齐保持固定的距离，而非始终相对标题定位，因此我们为他添加了向下对齐的约束。")]),t._v(" "),_("img",{attrs:{src:v(414),width:"640"}}),t._v(" "),_("p",[t._v("向下对齐约束，默认目标设置为最近的可视原子，即分割线，如果有必要可选的对齐目标可以是其他原子。")]),t._v(" "),_("p",[t._v("通过收集约束，我们补充了组件内原子的布局信息，（不定宽高）组件可以预览不同情况下的外观。")]),t._v(" "),_("p",[t._v("\b约束也会参与D2C的转换，具体的作用是进一步帮助确定或修正DSL的结构关系，以及补充定义每个原子的布局属性。")]),t._v(" "),_("blockquote",[_("p",[t._v("详细的约束参与D2C转换过程待补充")])]),t._v(" "),_("blockquote",[_("p",[t._v("添加约束可以在设计完成后由设计师进行，也可以由其他角色进行，具体由业务决定，设计工具和平台均可实现维护约束的能力。")])]),t._v(" "),_("h2",{attrs:{id:"区块转dsl"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#区块转dsl"}},[t._v("#")]),t._v(" 区块转DSL")]),t._v(" "),_("blockquote",[_("p",[t._v("本小节主要讲述设计稿中的组件单元转换为DSL的基本原理")])]),t._v(" "),_("h2",{attrs:{id:"dsl转dom"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#dsl转dom"}},[t._v("#")]),t._v(" DSL转DOM")]),t._v(" "),_("blockquote",[_("p",[t._v("本小节例举DSL转HTML DOM的过程")])]),t._v(" "),_("h2",{attrs:{id:"dsl转code"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#dsl转code"}},[t._v("#")]),t._v(" DSL转Code")]),t._v(" "),_("blockquote",[_("p",[t._v("本小节例举DSL转Component Code的过程")])])])}),[],!1,null,null,null);s.default=a.exports}}]);